{"version":3,"sources":["components/Statistics.js","components/FeedbackOptions.js","components/Notification.js","components/SectionTitle.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","feedback","name","onClick","Notification","message","defaultProps","SectionTitle","App","state","getFeedback","e","persist","setState","prevState","target","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","totalValue","PositiveValue","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAeeA,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,OCQSC,EAfS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,oCACE,4BAAQC,KAAK,OAAOC,QAASF,GAA7B,QAGA,4BAAQC,KAAK,UAAUC,QAASF,GAAhC,WAGA,4BAAQC,KAAK,MAAMC,QAASF,GAA5B,SCTAG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,oCACE,2BAAIA,KAIKD,IAMfA,EAAaE,aAAe,CAC1BD,QAAS,qBCXX,IA2BeE,EA3BM,SAAC,GAOf,IANLN,EAMI,EANJA,SACAN,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,iCACE,0DACA,kBAAC,EAAD,CAAiBE,SAAUA,IAC3B,0CACW,IAAVH,GAAe,kBAAC,EAAD,CAAcO,QAAS,sBACtCP,EAAQ,GACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,MCmBfS,E,4MAzCbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPa,YAAc,SAAAC,GACZA,EAAEC,UACF,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJH,EAAEI,OAAOb,KAAOY,EAAUH,EAAEI,OAAOb,MAAQ,O,EAKlDc,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,M,EAE/DC,gCAAkC,SAACC,EAAYC,GAC7C,OAASA,EAAgBD,EAAc,KAAKE,QAAQ,I,uDAE5C,IAAD,EACwBC,KAAKjB,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ4B,KAAKV,qBACbjB,EAAqB2B,KAAKJ,gCAC9BxB,EACA4B,KAAKjB,MAAMd,MAEb,OACE,oCACE,kBAAC,EAAD,CACEA,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLI,SAAUyB,KAAKhB,YACfZ,MAAOA,EACPC,mBAAoBA,S,GApCZ4B,aCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.498cdbb5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive Feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ feedback }) => {\r\n  return (\r\n    <>\r\n      <button name=\"good\" onClick={feedback}>\r\n        Good\r\n      </button>\r\n      <button name=\"neutral\" onClick={feedback}>\r\n        Neutral\r\n      </button>\r\n      <button name=\"bad\" onClick={feedback}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  feedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n};\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: 'No feedback given',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistics from './Statistics.js';\r\nimport FeedbackOptions from './FeedbackOptions.js';\r\nimport Notification from './Notification.js';\r\n\r\nconst SectionTitle = ({\r\n  feedback,\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) => {\r\n  return (\r\n    <section>\r\n      <h2>Please leave your feedback</h2>\r\n      <FeedbackOptions feedback={feedback} />\r\n      <h3>Statistics</h3>\r\n      {total === 0 && <Notification message={'No feedback given'} />}\r\n      {total > 0 && (\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={positivePercentage}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SectionTitle;\r\nSectionTitle.propTypes = {\r\n  feedback: PropTypes.func.isRequired,\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport SectionTitle from './SectionTitle.js';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  getFeedback = e => {\n    e.persist();\n    this.setState(prevState => {\n      return {\n        [e.target.name]: prevState[e.target.name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, item) => acc + item);\n  };\n  countPositiveFeedbackPercentage = (totalValue, PositiveValue) => {\n    return ((PositiveValue / totalValue) * 100).toFixed(1);\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(\n      total,\n      this.state.good,\n    );\n    return (\n      <>\n        <SectionTitle\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          feedback={this.getFeedback}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}